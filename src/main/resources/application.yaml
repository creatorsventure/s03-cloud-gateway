# Application
spring:
  application:
    name: s03-cloud-gateway
  profiles:
    active: test
  # Cloud
  cloud:
    gateway:
      routes:
        - id: org-service
          uri: lb://S02-04-ORG-SERVICE
          predicates:
            - Path=/api/org-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORGServiceCircuitBreaker
                fallbackUri: forward:/fallback/org-service
# Eureka
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
# Actuator
management:
  info:
    env:
      enabled: true
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  endpoints:
    jmx:
      exposure:
        include: "*"
    web:
      exposure:
        include: "*"
# Logging
logging:
  level:
    com.cv: info
  file:
    name: ./config/log/cloud.gateway.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      clean-history-on-start: true

# Resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true                # Enables actuator health endpoints for circuit breaker
        slidingWindowSize: 10                        # Number of recent calls to monitor for failure/slow response
        minimumNumberOfCalls: 5                      # Minimum calls needed before circuit breaker calculates failure rate
        permittedNumberOfCallsInHalfOpenState: 3     # When half-open, this many trial calls are allowed before deciding
        waitDurationInOpenState: 10s                 # How long to wait before transitioning from open to half-open state
        failureRateThreshold: 50                     # If more than 50% of calls fail, circuit breaker opens
        slowCallDurationThreshold: 4s                # If a call takes longer than this, it’s considered “slow”
        slowCallRateThreshold: 50                    # If more than 50% of calls are slow, breaker may open
    instances:
      ORGServiceCircuitBreaker:
        baseConfig: default                          # Use the above default config
      # USERSServiceCircuitBreaker:                  # example to add other services
      #   baseConfig: default
      #   failureRateThreshold: 60                   # Override just the failure threshold for this service
  retry:
    configs:
      default:
        max-attempts: 3                              # Total retry attempts = 3 (initial + 2 retries)
        waitDuration: 2s                             # Wait 2 seconds between retry attempts
    instances:
      ORGServiceCircuitBreaker:
        base-config: default
  ratelimiter:
    configs:
      default:
        limit-refresh-period: 1s                     # Every 1 second, the counter resets
        limitForPeriod: 10                           # Allow 10 requests per period (1s)
        timeoutDuration: 2s                          # Wait max 2 seconds to acquire permission (if rate limit hit)
    instances:
      ORGServiceCircuitBreaker:
        base-config: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 4s                          # If a call takes longer than 4s, it's timed out
        cancelRunningFuture: true                    # Cancel the future task if timeout occurs
    instances:
      ORGServiceCircuitBreaker:
        base-config: default
